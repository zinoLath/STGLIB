-- 版本信息

start_game = true

_luastg_version=0x1000
_luastg_min_support=0x1000

-- 执行命令行参数
-- [警告] 如果你在开发自己的私人或商业项目，请[必须]去掉执行命令行参数的代码

setting = {}
if #lstg.args>=2 then loadstring(lstg.args[2])() end
local editor_setting = setting
setting = nil

if updatelib then -- 编辑器的打包功能（仍然优先使用文件夹下的 data）
	-- lstg.FileManager.SetCurrentDirectory 方法未公开，因为它很危险
	lstg.FileManager.SetCurrentDirectory('data')
	os.execute('..\\..\\tools\\7z\\7z.exe u -tzip -mcu=on -r ..\\Library\\data.zip *')
	lstg.FileManager.SetCurrentDirectory('..')
end

-- 加载包

lstg.FileManager.AddSearchPath("data/") -- 可以把 data 的东西收纳到 data 文件夹里面，注意：LuaSTG 优先从压缩包内读取文件，如果发现修改 data 没效果请删掉 data.zip

for _,v in ipairs({"core","data","background","se","music","font"}) do
	local path = v .. ".zip"
	if lstg.FileManager.FileExist(path) then
		lstg.LoadPack(path)
	else
		path = "Library/" .. path
		if lstg.FileManager.FileExist(path) then
			lstg.LoadPack(path)
		end
	end
end

-- 将 lstg 库的方法导入到全局（很神秘的设计）

lstg.DoFile("lib/Lapi.lua")

-- 按键常量

lstg.DoFile("lib/Lkeycode.lua")

-- 游戏设置

lstg.DoFile("lib/Luserdata.lua")
lstg.DoFile("lib/Lsetting.lua")

if setting.showcfg == nil or setting.showcfg == true then -- 应该是给外部设置工具用的，比如龙隐谈有单独的设置工具
	-- 重新加载配置
	loadConfigure()
	saveConfigure()
end

for k, v in pairs(editor_setting) do
	setting[k] = v
end

setting.last_mod = setting.mod
if not start_game then
	setting.mod = "launcher"
	--setting.resx = 480
	--setting.resy = 640
	--setting.windowed = true
end

-- 按需加载启动器包

lstg.FileManager.CreateDirectory("mod")
if setting.mod ~= 'launcher' then
	local zip_path = string.format("mod/%s.zip", setting.mod) -- 压缩包文件
	local dir_path = string.format("mod/%s/", setting.mod) -- 文件夹模式的搜索路径
	local dir_root_script = string.format("mod/%s/root.lua", setting.mod) -- 文件夹模式下，这里应该有个 root.lua 脚本
	if lstg.FileManager.FileExist(zip_path) then
		lstg.LoadPack(zip_path) -- 有压缩包则加载压缩包
	elseif lstg.FileManager.FileExist(dir_root_script) then
		lstg.FileManager.AddSearchPath(dir_path) -- 没压缩包但是有文件夹和 root.lua 就添加搜索路径
	end
else
	if not lstg.FileManager.FileExist('launcher.lua') then
		--尝试加载启动器包
		if lstg.FileManager.FileExist('mod/launcher.zip') then
			lstg.LoadPack('mod/launcher.zip')--正常加载启动器
		else
			--找不到启动器包，尝试使用data.zip里面的启动器
		end
	else
		--使用裸露的启动器脚本
	end
end

-- 引擎初始化设置

lstg.SetSplash(true)
lstg.SetTitle(setting.mod)
lstg.SetWindowed(setting.windowed)
lstg.SetResolution(setting.resx,setting.resy)
lstg.SetFPS(60)
lstg.SetVsync(setting.vsync)
lstg.SetSEVolume(setting.sevolume/100)
lstg.SetBGMVolume(setting.bgmvolume/100)
